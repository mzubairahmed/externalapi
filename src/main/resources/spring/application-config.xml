<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:web-services="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

		<mvc:annotation-driven/>
		<web-services:annotation-driven/>
		<web-services:dynamic-wsdl id="productSearch" portTypeName="ProductSearch" 
		targetNamespace="http://www.asicentral.com/schema/product" locationUri="/productSearchService">
			<web-services:xsd location="/WEB-INF/product.xsd"/>
		</web-services:dynamic-wsdl>

		<web-services:dynamic-wsdl id="loginAPI" portTypeName="LoginAPI" 
		targetNamespace="http://www.asicentral.com/schema/login" locationUri="/loginAPI">
			<web-services:xsd location="/WEB-INF/login.xsd"/>
		</web-services:dynamic-wsdl>

		<context:component-scan base-package="com.asi"></context:component-scan>
		
		<cache:annotation-driven />
		<bean id="headerHandler" class="com.asi.service.resource.util.ExternalApiHeaderHandler" />
		<bean id="ExternalApiApplicationContextProvider" class="com.asi.core.spring.config.provider.ExternalApiApplicationContextProvider"></bean>
		<bean id="environmentConfigurator" class="com.asi.ext.api.config.EnvironmentConfigurator">
			<property name="env" value="stage"></property>
			<property name="lookupRestTemplate" ref="restTemplate"></property>
		</bean>
		<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml"/> 
		<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/> 	
		<context:property-placeholder  location="classpath:stage-environment.properties, classpath:velocity-import.properties" order="1"/>

 			 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
			    <property name="mediaTypes">
			        <map>
			            <entry key="xml" value="application/xml"/>
			            <entry key="html" value="text/html"/>
			            <entry key="json" value="application/json"/>
			        </map>
			    </property>
			    <property name="viewResolvers">
			        <list>
			            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
			            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			                <property name="prefix" value="/WEB-INF/jsp/"/>
			                <property name="suffix" value=".jsp"/>
			            </bean>
			        </list>
			    </property>
			    <property name="defaultViews">
			        <list>
			            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			        </list>
			    </property>
			</bean>		
	    <bean id="productServiceClient" class="com.asi.service.product.client.ProductClient">
	    	<property name="productSearchUrl" value="${ws.api.product.import}"></property> 
	    </bean>	    
	    <bean id="loginService" class="com.asi.service.resource.LoginService">
	    	<property name="loginAPIUrl" value="${ws.api.login}"></property>
	    </bean>
	    <!-- <bean id="lookupDataStore" class="com.asi.ext.api.product.transformers.ProductDataStore">
		    <property name="lookupRestTemplate" ref="restTemplate"/>
		     <property name="lookupConverter" ref="jsonlookupConvertor" />	    
	    </bean>
	    <bean id="jsonlookupConvertor" class="com.asi.ext.api.util.JsonToLookupTableConverter">
		    <property name="lookupRestTemplate" ref="restTemplate"/>	    
	    </bean> -->
	    <bean id="lookupValuesClient" class="com.asi.service.product.client.LookupValuesClient">
	        <property name="lookupRestTemplate" ref="restTemplate"/>
	         <property name="lookupColorURL" value="${lookup.color.url}"></property> 
	         <property name="lookupSizeURL" value="${lookup.sizes.url}"></property> 
	         <property name="lookupMaterialURL" value="${lookup.material.url}"></property> 
	         <property name="lookupcriteriaAttributeURL" value="${lookup.sizes.criteria.url}"></property>
	         <property name="originLookupURL" value="${lookup.orgin.url}"></property> 
	         <property name="lookupCategoryURL" value="${lookup.product.categories.url}"></property>
	         <property name="lookupArtworkURL" value="${lookup.imprint.artwork.url}"></property>
	         <property name="lookupImprintURL" value="${lookup.imprint.url}"></property> 	    
	         <property name="lookupTradeNameURL" value="${lookup.product.trade.names.url}"></property>    
	         <property name="lookupShapeURL" value="${lookup.product.shapes.url}"></property>  
	          <property name="lookupPackageURL" value="${lookup.packaging.url}"></property>  
	                  
	    </bean>
	
	     <bean id="lookupParser" class="com.asi.ext.api.integration.lookup.parser.LookupParser">
	       <!-- <property name="lookupClient" ref="lookupValuesClient"/>  -->
	       <!-- <property name="imprintParser" ref="imprintMethodParser"/>      -->   
	    </bean> 
	     <bean id="criteriasParser" class="com.asi.ext.api.integration.lookup.parser.CriteriaSetParser">
	     	<!--  <property name="productLookupParser" ref="lookupParser"/> -->   
	    </bean>
	    <bean id="productConfigurationParser" class="com.asi.ext.api.integration.lookup.parser.ProductConfigurationsParser">
	     	 <property name="productLookupParser" ref="lookupParser"/>   
	    </bean>
	    
	    <bean id="configurationParser" class="com.asi.ext.api.integration.lookup.parser.ConfigurationsParser">
	     	 <!-- <property name="productLookupParser" ref="lookupParser"/>   --> 
	    </bean>
	    <bean id="imprintMethodParser" class="com.asi.ext.api.integration.lookup.parser.ImprintParser">
	  <!--   <property name="criteriaLookupParser" ref="criteriasParser"/> 
	     <property name="lookupsParser" ref="lookupParser"/> -->  
	    </bean>
	    <bean id="productService" class="com.asi.ext.api.service.impl.ProductServiceImpl">
	    </bean>
	    <bean id="productRepo" class="com.asi.core.repo.product.ProductRepo">
	    	<!--  <property name="productClient" ref="productServiceClient"/> --> 
	    <!-- 	<property name="productConfiguration" ref="productConfigurationParser"/> -->
	    <!-- 	<property name="configurationParser" ref="configurationParser"/> -->
	    	<!-- <property name="imprintParser" ref="imprintMethodParser"/> -->
	    	<!--  <property name="productRestTemplate" ref="restTemplate"/> -->
	    	 <property name="productImportURL" value="${ws.api.product.import}"></property> 
	    	 <property name="batchProcessingURL" value="${lookup.batch.processing}"></property> 
	    	<!--  <property name="lookupDataStore" ref="lookupDataStore" /> -->
	    <!-- 	 <property name="lookupsParser" ref="lookupParser"/>     -->
	    </bean>
	   	<!-- To enable @RequestMapping process on type level and method level -->
   		<bean id="productDetail" class="com.asi.service.product.client.vo.ProductDetail"/>
	    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	        <property name="messageConverters">
	            <list>
	                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
	                 <bean class="org.springframework.http.converter.StringHttpMessageConverter "/>
	            </list>
	        </property>
	    </bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>error</value>
		</property>
	</bean>	
	    
	
</beans>
